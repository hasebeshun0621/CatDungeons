//*****************************************************************************
//!	@file	game.cpp
//!	@brief	
//!	@note	ゲーム処理
//!	@author	
//*****************************************************************************

//-----------------------------------------------------------------------------
//	Include header files.
//-----------------------------------------------------------------------------
#include <windows.h>
#include <stdio.h>
#include "CDirectInput.h"
#include "renderer.h"
#include "scene.h"
#include "camera.h"
#include "XAudio2.h"

//-----------------------------------------------------------------------------
// グローバル変数
//-----------------------------------------------------------------------------

//==============================================================================
//!	@fn		GameInit
//!	@brief	ゲーム初期処理
//!	@param	インスタンス値
//!	@param	ウインドウハンドル値
//!	@param	ウインドウサイズ幅（補正済みの値）
//!	@param	ウインドウサイズ高さ（補正済みの値）
//!	@param　フルスクリーンフラグ　true ; フルスクリーン　false : ウインドウ
//!	@retval	true 成功　false 失敗
//==============================================================================
bool GameInit(HINSTANCE hinst, HWND hwnd, int width, int height, bool fullscreen)
{

	// DirectX11 グラフィックス初期化
	Renderer::Init();

	// DirectINPUT初期化
	CDirectInput::GetInstance().Init(hinst,hwnd,width,height);
	//BGM初期化
	InitSound();
	// シーン初期処理
	InitScene();
	return	true;
}

//==============================================================================
//!	@fn		GameInput
//!	@brief	ゲーム入力検知処理
//!	@param　	
//!	@retval	なし
//==============================================================================
void GameInput(){
	// キーボード入力取得
	CDirectInput::GetInstance().GetKeyBuffer();

	// マウス入力取得
	CDirectInput::GetInstance().GetMouseState();


}

//==============================================================================
//!	@fn		GameUpdate
//!	@brief	ゲーム更新処理
//!	@param　	
//!	@retval	なし
//==============================================================================
void GameUpdate(){
	UpdateScene();
}

//==============================================================================
//!	@fn		GameRender
//!	@brief	ゲーム更新処理
//!	@param　	
//!	@retval	なし
//==============================================================================
void GameRender() {

	// 描画前処理
	Renderer::Begin();

	DrawScene();

	// ターゲットバッファクリア	
	float ClearColor[4] = { 1.0f, 0.0f, 0.0f, 1.0f }; //red,green,blue,alpha（ＲＧＢの各値を0.0〜1.0で指定）

	// これらのオプションはDXGI_PRESENT定数で定義されています。
	Renderer::End();

}

//==============================================================================
//!	@fn		GameMain
//!	@brief	ゲームループ処理
//!	@param　	
//!	@retval	なし
//==============================================================================
void GameMain()
{
	GameInput();					// 入力
	GameUpdate();					// 更新
	GameRender();					// 描画
}

//==============================================================================
//!	@fn		GameExit
//!	@brief	ゲーム終了処理
//!	@param　	
//!	@retval	なし
//==============================================================================
void GameExit()
{
	ExitScene();
	Renderer::Uninit();
}

//******************************************************************************
//	End of file.
//******************************************************************************
